<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 本配置文件是工名为mvc-dispatcher的DispatcherServlet使用， 提供其相关的Spring MVC配置 -->

    <!-- 启用Spring基于annotation的DI，激活@required @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource等注解 -->
    <context:annotation-config/>

    <!-- DispatcherServlet上下文，只搜索@Controller标注的bean，不搜索其它标注的bean-->
    <context:component-scan base-package="com">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- HandlerMapping, 无需配置， Spring MVC可以默认启动。 DefaultAnnotationHandlerMapping
		annotation-driven HandlerMapping -->

    <!--配置注解驱动，可以将请求参数绑定到控制器参数-->
    <mvc:annotation-driven/>

    <!-- 静态资源映射 -->
    <!-- <mvc:resources mapping="/css/**" location="/resources/css/" />
    <mvc:resources mapping="/js/**" location="/resources/js/" />
    <mvc:resources mapping="/images/**" location="/resources/imgs/" />
-->
    <mvc:default-servlet-handler/>

    <!-- 配置ViewResolver。 告诉DispatcherServlet 将用哪个ViewResolver 获取view ，这里使用 JstView 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后 -->

    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsps/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>


    <!--200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="resolveLazily" value="true" />
    </bean>

    <!--自动扫描装配-->
    <context:component-scan base-package="com.example.controller"/>

</beans>

